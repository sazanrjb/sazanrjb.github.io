<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sajan Rajbhandari</title>
    <description>A simple guy who loves technology.</description>
    <link>https://sazanrjb.com.np/</link>
    <atom:link href="https://sazanrjb.com.np/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sat, 03 Aug 2019 17:01:59 +0545</pubDate>
    <lastBuildDate>Sat, 03 Aug 2019 17:01:59 +0545</lastBuildDate>
    <generator>Jekyll v3.7.4</generator>
    
      <item>
        <title>Register .np domain for free</title>
        <description>&lt;p&gt;So you are planning to create a website and want to get a domain name for free? Or you are planning to start your blog but dont know where to start from. Be it a personal website, or a business website, you can get .np domains for free in Nepal. The only thing required is scanned copy of your citizenship, and a cover letter.&lt;/p&gt;

&lt;h2 id=&quot;what-is-np-domain-name&quot;&gt;What is .np domain name?&lt;/h2&gt;

&lt;p&gt;.np domain name is the &lt;a href=&quot;https://en.wikipedia.org/wiki/Country_code_top-level_domain&quot;&gt;Country code top-level domain (ccTLD)&lt;/a&gt;, reserved for Nepal. &lt;a href=&quot;http://www.mos.com.np/&quot;&gt;Mercantile Communicationa PVT. LTD.&lt;/a&gt; has the right to distribute .np domains in Nepal.&lt;/p&gt;

&lt;h2 id=&quot;how-to-get-then&quot;&gt;How to get then?&lt;/h2&gt;

&lt;p&gt;The registration is quite straight forward.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Go to https://register.com.np/ and check if the domain name you want is available. You can select from a various sets of domains such as &lt;code class=&quot;highlighter-rouge&quot;&gt;.com.np&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;.info.np&lt;/code&gt;, etc.&lt;/p&gt;

    &lt;p&gt;If the domain is not available, try a new one.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If the domain is available, click &lt;code class=&quot;highlighter-rouge&quot;&gt;Register now&lt;/code&gt;. It will take it to the login page. If you have not registered before, click &lt;code class=&quot;highlighter-rouge&quot;&gt;Create user&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fill all the details, and click &lt;code class=&quot;highlighter-rouge&quot;&gt;Create account&lt;/code&gt;. Verfication link will be sent to your email. Go to your email, and click &lt;code class=&quot;highlighter-rouge&quot;&gt;Verify&lt;/code&gt;. It will take you to the login page. Login with your newly created credentials.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Next you need to fill the domain request form. The tricky part is &lt;code class=&quot;highlighter-rouge&quot;&gt;Name server&lt;/code&gt; section. If you have purchased a hosting package, you will get nameservers from your hosting provider. If not, you can use free nameservers till you get a new one: &lt;code class=&quot;highlighter-rouge&quot;&gt;ns1.afraid.org&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;ns2.afraid.org&lt;/code&gt;&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;You can also use Cloudflare’s nameservers as well, which has many benefits. For that, login to &lt;a href=&quot;https://cloudflare.com&quot;&gt;Cloudflare&lt;/a&gt;, go to &lt;code class=&quot;highlighter-rouge&quot;&gt;DNS&lt;/code&gt;, and under &lt;code class=&quot;highlighter-rouge&quot;&gt;Cloudflare Nameservers&lt;/code&gt; section there will be the nameservers. Copy those in the two nameservers section.&lt;/p&gt;
    &lt;/blockquote&gt;

    &lt;p&gt;Then fill the &lt;code class=&quot;highlighter-rouge&quot;&gt;Administrative contact&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Technical contact&lt;/code&gt; information, which is quite straight forward.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Submit documents&lt;/p&gt;

    &lt;p&gt;Make sure you have scanned copy of either your citizenship, passport or license. 
 An extra thing you require is a cover letter requesting the domain name.&lt;/p&gt;

    &lt;p&gt;here is a sample of the cover letter:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
     Date: 2019-02-21

     To,
     The Host Master,
     Mercantile Communications Pvt. Ltd.

     Subject: Regarding registration of .np domain name

     Dear Sir/Madam,

     I would like to register a .np domain, www.&amp;lt;YOUR_DOMAIN&amp;gt;.com.np for my personal website. 
     I have filled all the forms, and also attached the required documents.

     I will be looking forward to hear soon. 

     Regards,
     &amp;lt;YOUR NAME&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;Make a doc file, paste the content above, and make adjustments accordingly. Then upload the file.&lt;/p&gt;

    &lt;p&gt;After that click &lt;code class=&quot;highlighter-rouge&quot;&gt;Save and Continue&lt;/code&gt;. Thats it! It will take around a day to point the nameservers to your domain name.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Thu, 21 Feb 2019 16:45:00 +0545</pubDate>
        <link>https://sazanrjb.com.np/2019/register-dot-np-domain-for-free/</link>
        <guid isPermaLink="true">https://sazanrjb.com.np/2019/register-dot-np-domain-for-free/</guid>
        
        <category>domain registration</category>
        
        <category>websites</category>
        
        
        <category>Domain Registration</category>
        
      </item>
    
      <item>
        <title>Nepali PUBG Characters</title>
        <description>&lt;p&gt;&lt;strong&gt;PlayerUnknown Battlegrounds (PUBG)&lt;/strong&gt; was one of the most popular games of 2018. Though I have not played it, I really like the character design of the game.&lt;/p&gt;

&lt;p&gt;I wanted to make similar character in Nepali dress up, and started thinking about the ideas. The obvious choice was to make a character wearing &lt;em&gt;Daura Suruwal&lt;/em&gt;. As I started creating it, several other ideas came into my mind.&lt;/p&gt;

&lt;p&gt;Here are some of the concept designs of PUBG character in Nepali lifestyle.&lt;/p&gt;

&lt;h2 id=&quot;pubg-character-in-nepali-dress&quot;&gt;PUBG Character in Nepali dress&lt;/h2&gt;
&lt;p&gt;Well battling in Daura Suruwal may not be easy though!
&lt;img src=&quot;/images/nepali-pubg-characters/nepali-pubg.jpg&quot; alt=&quot;Nepali PUBG Character&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;subg&quot;&gt;SUBG&lt;/h2&gt;
&lt;p&gt;Everyone needs to buy veggies.
&lt;img src=&quot;/images/nepali-pubg-characters/subg.jpg&quot; alt=&quot;Nepali PUBG Character&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;saug&quot;&gt;SAUG&lt;/h2&gt;
&lt;p&gt;Oh well!
&lt;img src=&quot;/images/nepali-pubg-characters/saug.jpg&quot; alt=&quot;Nepali PUBG Character&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;pubg-character-visiting-kathmandu&quot;&gt;PUBG Character visiting Kathmandu&lt;/h2&gt;
&lt;p&gt;What happens if PUBG Character comes to Kathmandu?
&lt;img src=&quot;/images/nepali-pubg-characters/ktm-pubg.jpg&quot; alt=&quot;Nepali PUBG Character&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Links:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.behance.net/gallery/74485577/Nepali-PUBG-Character&quot;&gt;Behance&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://dribbble.com/shots/5794015-Nepali-PUBG-Character&quot;&gt;Dribbble&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you liked it, share it with your friends. :)&lt;/p&gt;
</description>
        <pubDate>Sun, 06 Jan 2019 16:45:00 +0545</pubDate>
        <link>https://sazanrjb.com.np/2019/nepali-pubg-characters/</link>
        <guid isPermaLink="true">https://sazanrjb.com.np/2019/nepali-pubg-characters/</guid>
        
        <category>illustration</category>
        
        <category>character design</category>
        
        <category>graphic design</category>
        
        
        <category>Illustration</category>
        
      </item>
    
      <item>
        <title>Leverage laravel's form request to make your code cleaner</title>
        <description>&lt;p&gt;Laravel has a powerful feature called &lt;strong&gt;Form Request&lt;/strong&gt; to perform form validation logic. If we look at laravel’s official documentation, we can find &lt;strong&gt;Form Request&lt;/strong&gt; under &lt;a href=&quot;https://laravel.com/docs/5.6/validation#form-request-validation&quot;&gt;&lt;strong&gt;Validation&lt;/strong&gt;&lt;/a&gt; section. But it can be used for much more purposes than just a validation.&lt;/p&gt;

&lt;p&gt;First of all, let’s see how we can make a request class. Laravel has the following artisan command to create a form request class:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan make:request CreateProductRequest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above command will generate a file inside &lt;code class=&quot;highlighter-rouge&quot;&gt;app/Http/Requests&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;The file will contain two methods, &lt;code class=&quot;highlighter-rouge&quot;&gt;authorize&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;rules&lt;/code&gt;. The &lt;code class=&quot;highlighter-rouge&quot;&gt;authorize&lt;/code&gt; method is used to check if the user has authority to make this request. While in &lt;code class=&quot;highlighter-rouge&quot;&gt;rules&lt;/code&gt; method, we specify different rules that needs to be passed before moving to the controller.&lt;/p&gt;

&lt;p&gt;To apply this validation rules, we just need to inject this request class in our controller method like below:&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CreateProductRequest&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You can view more about it on laravel’s &lt;a href=&quot;https://laravel.com/docs/5.6/validation#introduction&quot;&gt;official documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Besides validation, request classes can be used to optimize and make controller classes look cleaner.&lt;/p&gt;

&lt;h2 id=&quot;custom-rule-class&quot;&gt;Custom Rule class&lt;/h2&gt;
&lt;p&gt;In many cases, &lt;a href=&quot;https://laravel.com/docs/5.5/validation#available-validation-rules&quot;&gt;built-in validation rules&lt;/a&gt; will be fine. But there will be many cases when custom rules need to be made.&lt;/p&gt;

&lt;p&gt;Lets say, we have two tables, &lt;code class=&quot;highlighter-rouge&quot;&gt;categories&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;products&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;products&lt;/code&gt; table contains a foreign key &lt;code class=&quot;highlighter-rouge&quot;&gt;category_id&lt;/code&gt; which links to 	&lt;code class=&quot;highlighter-rouge&quot;&gt;categories&lt;/code&gt;. A category can have multiple products and product name should be unique in each category.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;categories&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;id&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;name&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;products&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;id&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;name&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;category_id&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;While adding and editing products, we need to check if the product with the given name is already used. This logic can be written in controller but it will make the method look dirty. Instead, we can create a custom &lt;strong&gt;Rule&lt;/strong&gt; class introduced from laravel 5.5.&lt;/p&gt;

&lt;p&gt;A custom validation rule class can be creating by implementing `
Illuminate\Contracts\Validation\Rule` interface or with the following artisan command:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan make:rule UniqueProduct
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It will create a file inside &lt;code class=&quot;highlighter-rouge&quot;&gt;app\Rules&lt;/code&gt; directory. The Rule interface has two methods, &lt;code class=&quot;highlighter-rouge&quot;&gt;passes&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;message&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;passes&lt;/code&gt; is where we put logic required for the validation. In &lt;code class=&quot;highlighter-rouge&quot;&gt;message&lt;/code&gt;, we can simply return a string if the validation fails.&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App\Rules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Illuminate\Contracts\Validation\Rule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Illuminate\Support\Facades\DB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UniqueProduct&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Rule&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ignore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$categoryId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$categoryId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;categoryId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$categoryId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ignore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ignore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;passes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$product&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'products'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'products.category_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;categoryId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;// While editing product, ignore current product
&lt;/span&gt;		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ignore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nv&quot;&gt;$product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ignore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ignore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;// if &amp;gt; 0, Product with the name already exists
&lt;/span&gt;		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'The :attribute has already been taken.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;First of all, the id of the category is passed through the constructor. In the &lt;code class=&quot;highlighter-rouge&quot;&gt;passes&lt;/code&gt; method, at first,  there is a query to check if a product with the same name exists in the table, no fancy here. After that there is a condition to ignore the current product’s row. While editing, we don’t have to check the current product’s data, so for that, we just need to pass the identifier of the product in an array to the ignore method, eg. &lt;code class=&quot;highlighter-rouge&quot;&gt;['id', 1]&lt;/code&gt;.  And in &lt;code class=&quot;highlighter-rouge&quot;&gt;message&lt;/code&gt; method, we just return the error message for the validation.&lt;/p&gt;

&lt;p&gt;To use this rule, in the form request class, we only need to instantiate the rule class.&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;CreateProductRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;php&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
		&lt;span class=&quot;s1&quot;&gt;'category_id'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
			&lt;span class=&quot;s1&quot;&gt;'bail'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;s1&quot;&gt;'required'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UniqueProduct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'category_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;UpdateProductRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;php&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
		&lt;span class=&quot;s1&quot;&gt;'category_id'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
			&lt;span class=&quot;s1&quot;&gt;'bail'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;s1&quot;&gt;'required'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UniqueProduct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'category_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ignore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'productId'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// productId is obtained from the route param
&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// Route::put('products/{productId}', '..ProductController@update');
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So now both your controller and request class will look cleaner.&lt;/p&gt;

&lt;h2 id=&quot;addingediting-request-elements&quot;&gt;Adding/Editing request elements&lt;/h2&gt;
&lt;p&gt;There will be a time when we have to add some elements to the request object. Also, we may need to modify request elements before validating or storing it to the database.&lt;/p&gt;

&lt;p&gt;Lets say, while editing a product, the request has manufactured year, date and day as seperate elements, and we need to merge them together to create a single date. Similarly, let’s say product’s attributes are in json format and we need to convert it to array.&lt;/p&gt;

&lt;p&gt;One way is to modify them in the controller or service class after receiving the request object. Since, we are talking about making our code cleaner, we can utilize request classes to make our changes.&lt;/p&gt;

&lt;p&gt;As of laravel 5, laravel calls &lt;code class=&quot;highlighter-rouge&quot;&gt;getValidatorInstance&lt;/code&gt; method and it gets through several methods, to call &lt;code class=&quot;highlighter-rouge&quot;&gt;all()&lt;/code&gt; to get the input data for validation. We can override this method in form request class to add our own, or modify the request elements.&lt;/p&gt;

&lt;h3 id=&quot;adding-elements-to-request-data&quot;&gt;Adding elements to request data&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;merge&lt;/code&gt; method will merge the request data with our own array data, which can be useful to add our own data to the request object.&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'date_of_manufacture'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;implode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
		&lt;span class=&quot;s1&quot;&gt;'-'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
			&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'year'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
			&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
			&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'day'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;)]);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;editing-request-data&quot;&gt;Editing request data&lt;/h3&gt;
&lt;p&gt;We can retrieve all the input data in an array from &lt;code class=&quot;highlighter-rouge&quot;&gt;parent::all()&lt;/code&gt; . Then we can modify the existing elements of the array.&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// assuming attributes will be json encoded data
&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// convert to into associative array
&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// can be useful for array validation
&lt;/span&gt;	&lt;span class=&quot;nv&quot;&gt;$input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'attributes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;json_decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'attributes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// replaces the request data with new data
&lt;/span&gt;	&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So by these ways, we can make our code cleaner by utilizing the request classes, and use them beyond validation.&lt;/p&gt;
</description>
        <pubDate>Wed, 25 Apr 2018 01:42:00 +0545</pubDate>
        <link>https://sazanrjb.com.np/2018/leverage-laravels-form-request-optimize-and-make-code-cleaner/</link>
        <guid isPermaLink="true">https://sazanrjb.com.np/2018/leverage-laravels-form-request-optimize-and-make-code-cleaner/</guid>
        
        <category>laravel</category>
        
        <category>programming</category>
        
        
        <category>Laravel</category>
        
      </item>
    
      <item>
        <title>5 things I learned by participating in Hacktoberfest</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/5-things-learned-hacktoberfest/hacktoberfest.png&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This post was originally posted on Medium (
&lt;a href=&quot;https://medium.com/introcept-hub/5-things-i-learned-by-participating-in-hacktoberfest-917e2993ff5d&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;5 things I learned by participating in Hacktoberfest&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To start off, I had never contributed to any open source projects. I wanted to, but never got my hands into it, or let’s say I hesitated to find suitable projects.&lt;/p&gt;

&lt;p&gt;One day, a colleague of mine told me about a campaign called Hacktoberfest, which happens during the month of October. He told me that we could get T-shirts by just opening four pull requests in any open source projects on github. At first, I did not show much interest even though I bookmarked the official page of the campaign (https://hacktoberfest.digitalocean.com).&lt;/p&gt;

&lt;p&gt;I researched about the campaign after a few days and found out that a lot of people were participating. So I decided to give it a try and started searching for issues having label ‘hacktoberfest’ on github.&lt;/p&gt;

&lt;p&gt;As I am specialized in web development, specifically in PHP and JavaScript, I searched in those areas. My first PR was about sending confirmation email to the user after creating one. Though it is a simple task, I just wanted to get my hands dirty in the campaign. After that, I had submitted four PRs, all of them got merged.&lt;/p&gt;

&lt;p&gt;I don’t know about the T-shirt, but I feel happy that I participated in the campaign. Here are the 5 things I learned:&lt;/p&gt;

&lt;h3 id=&quot;experience&quot;&gt;Experience&lt;/h3&gt;

&lt;p&gt;You will feel a bit hesitant at first, but once you start, you will just want to contribute more and more. I got the chance to checkout coding styles of a lot of different developers. Furthermore, I learned about different approaches developers use to solve specific problems.&lt;/p&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;
    &lt;img src=&quot;/images/5-things-learned-hacktoberfest/challenge-completed.png&quot; alt=&quot;Challenge Completed&quot; /&gt;
&lt;/div&gt;

&lt;h3 id=&quot;some-people-arelazy&quot;&gt;Some people are lazy&lt;/h3&gt;
&lt;p&gt;While some people genuinely ask for help or encourage beginners, some people create issues for almost everything they want to add in their projects. It’s an opportunity for them to get the job done by others for free.&lt;/p&gt;

&lt;p&gt;One of the devs created an issue to test all the classes of his application. Similarly, another guy created an issue to refactor the overall project. On the other hand, many people would find and submit small PRs just to get T-shirts from github and digitalocean.&lt;/p&gt;

&lt;figure style=&quot;text-align: center;&quot; class=&quot;image&quot;&gt;
&lt;img src=&quot;/images/5-things-learned-hacktoberfest/tenor.gif&quot; alt=&quot;Duh&quot; /&gt;
 &lt;figcaption&gt;Source: https://tenor.com/view/chuck-chuck-bartowski-zachary-levi-duh-gif-4201188&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;some-areheroes&quot;&gt;Some are heroes&lt;/h3&gt;
&lt;p&gt;While browsing through the list of issues, some devs were genuinely promoting open source culture and helping newcomers. Repos with thousands of likes on github, were encouraging others to submit PR by creating issues. I think this will definitely have a positive effect in expanding the open source community.&lt;/p&gt;

&lt;figure style=&quot;text-align: center;&quot; class=&quot;image&quot;&gt;
&lt;img src=&quot;/images/5-things-learned-hacktoberfest/superman.gif&quot; alt=&quot;heros&quot; /&gt;
 &lt;figcaption&gt;Source: http://www.laughinggif.com/view/e20w1ltnnk/13.html&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;freedom&quot;&gt;Freedom&lt;/h3&gt;
&lt;p&gt;Usually, we get deadlines to complete tasks when we work in the office. Working on a tight schedule not only decreases creativity but also welcomes bugs. While contributing in around five projects, I did not have any deadlines, so I could think of any new solutions to perform the task. And we don’t have to worry about our PRs not getting merged.&lt;/p&gt;

&lt;h3 id=&quot;itsfun&quot;&gt;It’s Fun&lt;/h3&gt;
&lt;p&gt;While my first PR took very long time to get merged, my next two PRs immediately got merged. I got excited when my PR was merged, and that encouraged me to look into other issues. Also, the appreciations I got motivated me to do more.&lt;/p&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;
    &lt;img src=&quot;/images/5-things-learned-hacktoberfest/pr-review.png&quot; alt=&quot;PR Review&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
Learning new things is fun in itself. We can try new ways to solve a problem and we are free to research about them online. Overall, this campaign was fun, getting all my PRs merged.&lt;/p&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;
    &lt;img src=&quot;/images/5-things-learned-hacktoberfest/pr-list.png&quot; alt=&quot;PRs List&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
Overall, Hacktoberfest was a perfect place for me to start contributing to open source projects. Like me, there were many people sharing positive feedback from their experiences.&lt;/p&gt;

&lt;p&gt;If you have participated in the campaign, please share your experiences in the comments below.&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Oct 2017 16:42:00 +0545</pubDate>
        <link>https://sazanrjb.com.np/2017/5-things-i-learned-by-participating-in-hacktoberfest/</link>
        <guid isPermaLink="true">https://sazanrjb.com.np/2017/5-things-i-learned-by-participating-in-hacktoberfest/</guid>
        
        <category>hacktoberfest</category>
        
        <category>programming</category>
        
        
        <category>Programming</category>
        
      </item>
    
  </channel>
</rss>
